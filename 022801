<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title>JS 25-27-1</title>
</head>

<body>
	<!--在页面中显示当前日期及时间，按秒更新
格式为 YYYY 年 MM 月 DD 日 星期 D HH:mm:ss
注意位数的补齐，比如：
-- 假设时间为2008年10月10日星期一的12点12分12秒，显示2008年10月10日星期一 12:12:12
-- 假设时间为2008年1月1日星期一的3点2分2秒，显示2008年01月01日星期一 03:02:02
编码过程中，我们希望你注意对函数的封装，尽量让一个函数就做一个事情，而不要把所有的功能、代码揉在一起：

封装一个函数，来根据某个日期返回这一天是星期几
封装一个函数，把月、日、小时等出现个位数的情况前面补充0，补充为两位，比如1变为01
封装一个函数，把最后的日期时间，按照要求的格式进行包装
可能不止上面这些，尽可能地进行功能的解耦和拆解-->
	<p id="clock"></p>
	<script>
		function Format(date){
			var month=(Array(2).join(0) + (date.getMonth()+1)).slice(-2);
			var day=(Array(2).join(0) + date.getDate()).slice(-2);
			var hour=(Array(2).join(0) + date.getHours()).slice(-2);
			var minute=(Array(2).join(0) + date.getMinutes()).slice(-2);
			var second=(Array(2).join(0) + date.getSeconds()).slice(-2);
			var week=["星期日","星期一","星期二","星期三","星期四","星期五","星期六"];
			var format=date.getFullYear()+"年"+month+"月"+day+"日 "+week[date.getDay()]+" "+hour+":"+minute+":"+second;
			return format;
		}
		function setTimer(){
			var time=new Date();
			clock.innerText=Format(time);
		}
		function clock_click(){
			if(timer==null){
				clearInterval(timer);
				timer=setInterval(setTimer,1000);
			}else{
				clearInterval(timer);
				timer=null;
			}
		}
		var clock=document.getElementById("clock");
		clock.innerText=Format(new Date());
		var timer=null;
		clearInterval(timer);
		timer=setInterval(setTimer,1000);
		clock.onclick=clock_click;
	</script>

</body>
</html>
